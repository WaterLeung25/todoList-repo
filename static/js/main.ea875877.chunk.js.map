{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Header.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","addTodoInputOnChange","e","setState","defineProperty","target","name","addTodoOnSubmit","preventDefault","addTodo","onSubmit","display","placeholder","flex","className","Header","headerStyle","Link","linkStyle","to","textAlign","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","BrowserRouter","Route","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea875877.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            background: \"#f4f4f4\",\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ?\r\n                'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, title } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type=\"checkbox\" onChange={ this.props.markComplete.bind(this, id) }/> {' '}\r\n                    { title }\r\n                    <button onClick={ this.props.delTodo.bind(this, id) } style={btnStyle}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\nexport default TodoItem\r\n\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n    render(){\r\n        return this.props.todos.map((todo) => (\r\n            <TodoItem key={todo.id} todo={todo} \r\n            markComplete={this.props.markComplete}\r\n            delTodo={this.props.delTodo}></TodoItem>\r\n        ));\r\n    }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    addTodoInputOnChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n    \r\n    addTodoOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({ title: '' })\r\n    }\r\n\r\n    render() {\r\n    return (\r\n      <form onSubmit={this.addTodoOnSubmit} style={{ display: 'flex' }}> \r\n        <input \r\n        type=\"text\" \r\n        name=\"title\" \r\n        placeholder=\"Add Todo ...\" \r\n        style={{ flex: '10', padding: '5px' }}        \r\n        value={this.state.title}\r\n        onChange={this.addTodoInputOnChange}\r\n        />\r\n        <input \r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n        className=\"btn\"\r\n        style={{flex: '1'}}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequiredgit\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>TodoList</h1>\r\n      <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n  color: '#fff',\r\n  textDecoration: 'none'\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the TodoList app v1.0.0. It is part of a React crash course</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Todos from './components/Todos'\nimport AddTodo from './components/AddTodo'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\n// import uuid from 'uuid'\n\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({todos: res.data}))\n  }\n\n  // Toggle Complete\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    })\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    // this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n    \n    // using a DELETE request\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]}));\n  }\n\n  addTodo = (title) => {    \n    // const newTodo = {\n    //   id: uuid.v4(),\n    //   title,\n    //   completed: false }\n    // this.setState({ todos: [...this.state.todos, newTodo] });\n\n    // using a POST request\n    axios.post('https://jsonplaceholder.typicode.com/todos',\n    {\n      title,\n      completed: false\n    }).then(res => this.setState({todos: [...this.state.todos, res.data]}));\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos}\n                  markComplete={this.markComplete}\n                  delTodo={this.delTodo}></Todos>\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}